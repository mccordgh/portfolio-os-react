{"version":3,"sources":["res/mccordinator2_head.png","constants/image_path.js","Desktop/MobileView/Banner/Banner.js","Desktop/MobileView/AppGroup/OsApp/OsAppSmall/OsAppSmall.js","Desktop/MobileView/AppGroup/OsApp/OsAppBig/OsAppBig.js","Desktop/MobileView/AppGroup/OsApp/OsApp.js","Desktop/MobileView/AppGroup/AppGroupSmall/AppGroupSmall.js","Desktop/MobileView/AppGroup/AppGroupBig/AppGroupBig.js","Desktop/MobileView/AppGroup/AppGroup.js","Desktop/OpenAppWindow/OpenAppWindow.js","Desktop/MobileView/MobileView.js","Desktop/DesktopView/DesktopAppGroup/DesktopApp/DesktopApp.js","Desktop/DesktopView/DesktopAppGroup/DesktopAppGroup.js","Desktop/DesktopView/DesktopStatusBar/DesktopStatusBar.js","Desktop/Mccordinator/Mccordinator.js","Desktop/DesktopView/OpenDesktopAppWindow/OpenDesktopAppWindow.js","Desktop/DesktopView/DesktopView.js","Desktop/Desktop.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","image_path","concat","process","Banner","react_default","a","createElement","className","onClick","this","props","openAboutCallback","href","IMAGE_PATH","target","rel","currentTime","Date","currentDay","getDay","hours","getHours","minutes","getMinutes","suffix","Component","OsAppSmall","style","osAppSmallStyleObject","backgroundImage","iconImage","backgroundSize","backgroundRepeat","backgroundPosition","OsAppBig","_this","osAppBigStyleObject","clickHandler","name","console","log","activeLink","window","open","openAppCallback","id","group","OsApp","image","directory","state","OsAppSmall_OsAppSmall_OsAppSmall","bgColor","OsAppBig_OsAppBig_OsAppBig","AppGroupSmall","clickCallback","list","map","item","key","OsApp_OsApp","AppGroupBig","makeGroupSmall","AppGroup","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","makeGroupBig","bind","assertThisInitialized","AppGroupSmall_AppGroupSmall_AppGroupSmall","AppGroupBig_AppGroupBig_AppGroupBig","openApp","setState","OpenAppWindow","app","headerImage","links","length","link","url","text","closeAppCallback","src","alt","shortText","description","paragraph","MobileView","Banner_Banner_Banner","apps","appGroup","AppGroup_AppGroup","headIcon","selectedApp","OpenAppWindow_OpenAppWindow_OpenAppWindow","DesktopApp","desktopAppStyleObject","DesktopAppGroup","wrapperClass","toggleExpansionClasses","_this2","DesktopApp_DesktopApp_DesktopApp","expandedClass","DesktopStatusBar","time","version","getCurrentTime","setInterval","seconds","getSeconds","Mccordinator","dialogueNumber","bubbleText","showBubble","clickyTheFace","nextDialogueQueue","closeDialogue","continue","exit","next","dialogue","showDialogue","OpenDesktopAppWindow","DesktopView","appGroups","DesktopAppGroup_DesktopAppGroup_DesktopAppGroup","OpenDesktopAppWindow_OpenDesktopAppWindow_OpenDesktopAppWindow","DesktopStatusBar_DesktopStatusBar_DesktopStatusBar","Mccordinator_Mccordinator_Mccordinator","Desktop","mode","setModeByClientWidth","mobileMode","MobileView_MobileView","closeApp","openAbout","desktopMode","DesktopView_DesktopView_DesktopView","appsList","data","init","addEventListener","removeEventListener","innerWidth","assign","getRandomColor","colors","Math","floor","random","findAppByIdAndGroup","portfolioAbout","groupName","find","appToOpen","App","Desktop_Desktop_Desktop","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.87123521.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mccordinator2_head.907c5d29.png\";","export default `${process.env.PUBLIC_URL}/res`;","import React, { Component } from 'react';\nimport './Banner.css';\nimport IMAGE_PATH from '../../../constants/image_path';\n\nexport default class Banner extends Component {\n  render() {\n    return (\n        <div className=\"banner-container\">\n          <div className=\"banner-left\">\n            <span onClick={this.props.openAboutCallback}>About</span>\n            <span>\n              <a href={`${IMAGE_PATH}/resume.pdf`} target=\"_blank\" rel=\"noopener noreferrer\">\n                Resume\n              </a>\n            </span>\n          </div>\n\n          <div className=\"banner-right\">\n            <span>{ this.currentTime() }</span>\n          </div>\n        </div>\n      );\n}\n\ncurrentTime() {\nconst days = ['Sun', 'Mon', 'Tues', 'Weds', 'Thurs', 'Fri', 'Sat'];\nconst currentTime = new Date(), currentDay = currentTime.getDay();\nlet hours = currentTime.getHours(), minutes = currentTime.getMinutes();\n\nif (minutes < 10) {\n   minutes = `0${minutes}`;\n}\n\nlet suffix = \"AM\";\n\nif (hours >= 12) {\nsuffix = \"PM\";\nhours = hours - 12;\n}\n\nif (hours === 0) {\nhours = 12;\n}\n\nreturn `${days[currentDay]} ${hours}:${minutes} ${suffix}`;\n}\n}\n","import React, { Component } from 'react';\n\nimport './OsAppSmall.css';\n\nexport default class OsAppSmall extends Component {\n    render() {\n        return (\n            <div className=\"OsAppGroupSmall\">\n                <div\n                    className=\"OsAppGroupSmallBackground\"\n                    style={this.osAppSmallStyleObject()}\n                >\n                    <div className=\"OsAppGroupSmallContainer\">\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    osAppSmallStyleObject() {\n        return {\n            backgroundImage: `url(${this.props.iconImage})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n        };\n    }\n}","import React, { Component } from 'react';\n\nimport './OsAppBig.css';\n\nexport default class OsAppBig extends Component {\n    render() {\n        return (\n            <div className=\"OsAppGroupBig\">\n                <div\n                    className=\"OsAppGroupBigBackground\"\n                    style={this.osAppBigStyleObject()}\n                    onClick={() => { this.clickHandler() }}\n                >\n                    <div className=\"OsAppGroupBigContainer\">\n                    </div>\n                </div>\n\n                <div className=\"OsAppGroupBigTitle\">\n                    <h3>{ this.props.name }</h3>\n                </div>\n            </div>\n        )\n    }\n\n    osAppBigStyleObject() {\n        return {\n            backgroundImage: `url(${this.props.iconImage})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n        };\n    }\n\n    clickHandler() {\n        console.log(this.props);\n        if (this.props.activeLink) {\n            window.open(this.props.activeLink, '_blank');\n\n            return;\n        }\n\n        this.props.openAppCallback(this.props.id, this.props.group)\n    }\n}\n","import React, { Component } from 'react';\nimport OsAppSmall from './OsAppSmall/OsAppSmall';\nimport OsAppBig from './OsAppBig/OsAppBig';\n\nexport default class OsApp extends Component {\n    render() {\n        const image = `${this.props.directory}${this.props.iconImage}`;\n\n        return this.props.state === 'small' ? (\n            <OsAppSmall\n                iconImage={image}\n                bgColor={this.props.bgColor}\n            />\n        ) : (\n            <OsAppBig\n                id={this.props.id}\n                activeLink={this.props.activeLink}\n                name={this.props.name}\n                group={this.props.group}\n                iconImage={image}\n                openAppCallback={this.props.openAppCallback}\n            />\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport OsApp from '../OsApp/OsApp';\nimport './AppGroupSmall.css';\n\nexport default class AppGroupSmall extends Component {\n    render() {\n        return (\n        <div className=\"appGroupSmall\" onClick={this.props.clickCallback}>\n            <div className=\"appGroupSmallBackground\">\n                <div className=\"appGroupSmallContainer\">\n                    {\n                        this.props.list.map((item, key) => {\n                            return <OsApp\n                                key={key}\n                                name={item.name}\n                                bgColor={item.bgColor}\n                                activeLink={item.activeLink}\n                                iconImage={item.iconImage}\n                                directory={this.props.directory}\n                                state={this.props.state}\n                            />;\n                        })\n                    }\n                </div>\n\n                <div className=\"appGroupSmallTitle\">\n                    <h3>{ this.props.name }</h3>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport OsApp from '../OsApp/OsApp';\n\nimport './AppGroupBig.css';\n\nexport default class AppGroupBig extends Component {\n  render() {\n    return (\n      <div className=\"appGroupSmallPlaceholder\">\n            <div\n                className=\"osAppGroupDimBehind\"\n                onClick={() => { this.props.makeGroupSmall() }}\n            ></div>\n\n        <div className=\"appGroupBig\">\n             <div className=\"appGroupBigTitle\">\n                <h1>{ this.props.name }</h1>\n            </div>\n\n            <div className=\"appGroupBigBackground\">\n                <div className=\"appGroupBigContainer\">\n                    {\n                        this.props.list.map((item, key) => {\n                            return <OsApp\n                                key={key}\n                                id={key}\n                                name={item.name}\n                                group={this.props.name}\n                                bgColor={item.bgColor}\n                                activeLink={item.activeLink}\n                                iconImage={item.iconImage}\n                                directory={this.props.directory}\n                                state={this.props.state}\n                                openAppCallback={this.props.openAppCallback}\n                            />;\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AppGroupSmall from './AppGroupSmall/AppGroupSmall';\nimport AppGroupBig from './AppGroupBig/AppGroupBig';\n\nexport default class AppGroup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      state: 'small',\n    };\n\n    this.makeGroupBig = this.makeGroupBig.bind(this);\n    this.makeGroupSmall = this.makeGroupSmall.bind(this);\n  }\n  render() {\n    return this.state.state === 'small' ? (\n      <AppGroupSmall\n        list={this.props.list}\n        name={this.props.name}\n        activeLink={this.props.activeLink}\n        clickCallback={this.makeGroupBig}\n        state={this.state.state}\n        directory={this.props.directory}\n      />\n    ) : (\n      <AppGroupBig\n        list={this.props.list}\n        name={this.props.name}\n        state={this.state.state}\n        directory={this.props.directory}\n        openAppCallback={this.openApp.bind(this)}\n        makeGroupSmall={this.makeGroupSmall}\n      />\n    );\n  }\n\n  makeGroupBig() {\n    this.setState({state: 'big'});\n  }\n\n  makeGroupSmall() {\n    this.setState({state: 'small'});\n  }\n\n  openApp(id, group) {\n    this.makeGroupSmall();\n\n    this.props.openAppCallback(id, group);\n  }\n}\n","import React, { Component } from 'react';\n\nimport './OpenAppWindow.css';\n\nimport IMAGE_PATH from '../../constants/image_path';\n\nexport default class OpenAppWindow extends Component {\n    render() {\n        const image = `${IMAGE_PATH}/${this.props.app.directory}/${this.props.app.headerImage}`;\n        const iconImage = `${IMAGE_PATH}/${this.props.app.directory}/${this.props.app.iconImage}`;\n        const links = this.props.app.links.length\n        ? (\n            <ul>\n                {\n                    this.props.app.links.map((link, key) => {\n                        return (\n                            <li key={key}><a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a></li>\n                        )\n                    })\n                }\n            </ul>\n        )\n        : (<div></div>);\n        return (\n            <div className=\"openApp\">\n                {/* <div className=\"closeAppWrapper\">\n                    <span onClick={() => {this.props.closeAppCallback()}}>[X]</span>\n                </div> */}\n\n\n                <div className=\"appImageTitle\">\n                    <span>{this.props.app.name}</span>\n                    \n                    <div className=\"app_close\">\n                        <span onClick={() => {this.props.closeAppCallback()}}>X</span>\n                    </div>\n                </div>\n\n                <div className=\"appImageWrapper\">\n                    <img src={image} alt=\"App Logo\"/>\n                </div>\n\n                <p>{this.props.app.shortText}</p>\n\n                <div className=\"appDescriptionWrapper\">\n                    {\n                        this.props.app.description.map((paragraph, key) => {\n                            return (\n                                <div key={key} className=\"app-description--image-wrapper\">\n                                    <img className=\"app-description--icon\" src={iconImage} alt=\"bullet points for description\"></img>\n                                    <p>{ paragraph }</p>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n\n                { links }\n            </div>\n        );\n   }\n}","import React, { Component } from 'react';\nimport Banner from './Banner/Banner';\nimport AppGroup from './AppGroup/AppGroup';\nimport OpenAppWindow from '../OpenAppWindow/OpenAppWindow';\n\nimport IMAGE_PATH from '../../constants/image_path';\n\nexport default class MobileView extends Component {\n    render() {\n        return (\n            <div className=\"mobileContainer\">\n                {/* <h1 style={{textAlign:'center', width: '100%', marginTop: '10rem', fontSize: '5rem'}}>Mobile View is coming soon!!</h1> */}\n                <Banner \n                    openAboutCallback={this.props.openAboutCallback}\n                />\n\n                <div className=\"appgroupContainer\">\n                {\n                    this.props.apps.map((appGroup, key) => {\n                    return <AppGroup\n                        key={key}\n                        name={appGroup.name}\n                        list={appGroup.list}\n                        directory={`${IMAGE_PATH}/${appGroup.directory}`}\n                        openAppCallback={this.props.openAppCallback}\n                    />;\n                    })\n                }\n                </div>\n\n                <div className=\"osImage\">\n                <img src={this.props.headIcon} alt=\"Mccordinator's Pixel Head\"/>\n                </div>\n\n                {this.props.selectedApp.name &&\n                <OpenAppWindow\n                    app={this.props.selectedApp}\n                    closeAppCallback={this.props.closeAppCallback}\n                />\n                }\n            </div>\n      );\n    }\n}\n","import React, { Component } from 'react';\n\nimport './DesktopApp.css';\n\nexport default class DesktopApp extends Component {\n    render() {\n        return (\n            <div className=\"desktopApp\">\n                <div\n                    className=\"desktopAppBackground\"\n                    style={this.desktopAppStyleObject()}\n                    onClick={() => { this.clickHandler() }}\n                >\n                </div>\n\n                <div className=\"desktopAppTitle\">\n                    <h3>{ this.props.name }</h3>\n                </div>\n            </div>\n        )\n    }\n\n    desktopAppStyleObject() {\n        return {\n            // backgroundImage: `url(${this.props.iconImage}), linear-gradient(to bottom right, ${this.props.bgColor} 30%, white 150%)`,\n            backgroundImage: `url(${this.props.iconImage})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n        };\n    }\n\n    clickHandler() {\n        if (this.props.activeLink) {\n            window.open(this.props.activeLink, '_blank');\n\n            return;\n        }\n\n        this.props.openAppCallback(this.props.id, this.props.group);\n    }\n}","import React, { Component } from 'react';\nimport DesktopApp from './DesktopApp/DesktopApp';\n\nimport './DesktopAppGroup.css';\n\nimport IMAGE_PATH from '../../../constants/image_path';\n\nexport default class DesktopAppGroup extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n          wrapperClass: '',\n        };\n\n        this.toggleExpansionClasses = this.toggleExpansionClasses.bind(this);\n    }\n\n    render() {\n        return (\n            <div className={`desktopAppGroupWrapper ${this.state.wrapperClass}`}>\n                <div className=\"desktopGroupFolder\" onClick={this.toggleExpansionClasses}>\n                    <div className=\"desktopGroupFolder_back\"></div>\n\n                    <div className=\"desktopGroupFolder_front\">\n                        <h1 className=\"desktopGroupTitle no-select\">{ this.props.name }</h1>\n                    </div>\n                </div>\n\n                <div className=\"desktopAppWrapper\">\n                    {\n                        this.props.list.map((item, key) => {\n                            return <DesktopApp\n                                key={key}\n                                activeLink={item.activeLink}\n                                bgColor={item.bgColor}\n                                iconImage={`${IMAGE_PATH}/${this.props.directory}${item.iconImage}`}\n                                group={this.props.name}\n                                id={key}\n                                name={item.name}\n                                openAppCallback={this.props.openAppCallback}\n                            />;\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    toggleExpansionClasses() {\n        const expandedClass = this.state.wrapperClass === 'expanded' ? '' : 'expanded';\n\n        this.setState({ wrapperClass: expandedClass });\n    }\n}","import React, { Component } from 'react';\n\nimport './DesktopStatusBar.css';\n\nimport { version } from '../../../json/version';\n\nexport default class DesktopStatusBar extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            time: '',\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"desktop_banner-container\">\n                <div className=\"desktop_banner-left\">\n                    <span>Portfolio OS v{ version }</span>\n                    <span className=\"banner-left--highlights\" onClick={this.props.openAboutCallback}>\n                        About This Portfolio\n                    </span>\n                    <span className=\"banner-left--highlights\" >\n                        <a href=\"https://mccordgh.github.io/matthew_mccord_resume/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            Resume\n                        </a>\n                    </span>\n                </div>\n\n                <div className=\"desktop_banner-right\">\n                    <span>{ this.state.time }</span>\n                </div>\n            </div>\n          );\n    }\n\n    componentDidMount() {\n        this.setState({time: this.getCurrentTime()})\n\n        setInterval(() => {\n            this.setState({time: this.getCurrentTime()});\n        }, 1000);\n    }\n\n    getCurrentTime() {\n    const days = ['Sun', 'Mon', 'Tues', 'Weds', 'Thurs', 'Fri', 'Sat'];\n    const currentTime = new Date(), currentDay = currentTime.getDay();\n    let hours = currentTime.getHours(), minutes = currentTime.getMinutes(), seconds = currentTime.getSeconds();\n\n    if (minutes < 10) {\n       minutes = `0${minutes}`;\n    }\n\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n\n    let suffix = \"AM\";\n\n    if (hours >= 12) {\n    suffix = \"PM\";\n    hours = hours - 12;\n    }\n\n    if (hours === 0) {\n    hours = 12;\n    }\n\n    return `${days[currentDay]} ${hours}:${minutes}:${seconds} ${suffix}`;\n    }\n}","import React, { Component } from 'react';\n\nimport './Mccordinator.css';\n\nimport dialogue from '../../json/dialogue.json';\n\nexport default class Mccordinator extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            dialogueNumber: 0,\n            bubbleText: '',\n            showBubble: false,\n        };\n\n        this.clickyTheFace = this.clickyTheFace.bind(this);\n        this.nextDialogueQueue = this.nextDialogueQueue.bind(this);\n        this.closeDialogue = this.closeDialogue.bind(this);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"mccordinatorHead\"></div>\n                {/* <div onClick={this.clickyTheFace} className=\"mccordinatorHead\"></div> */}\n\n                { this.state.showBubble &&\n                    <div className=\"mccordinatorSpeechBubble\">\n                        <p>\n                            { this.state.bubbleText.text }\n                        </p>\n                        <span onClick={this.nextDialogueQueue}> + {this.state.bubbleText.continue}</span>\n                        <span onClick={this.closeDialogue}> + {this.state.bubbleText.exit}</span>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.nextDialogueQueue();\n    }\n\n    nextDialogueQueue() {\n        const next = (this.state.dialogueNumber >= (dialogue.length - 1))\n            ? 0\n            : this.state.dialogueNumber + 1;\n        \n        this.setState({\n                bubbleText: dialogue[this.state.dialogueNumber],\n                dialogueNumber: next,\n        });\n    }\n\n    closeDialogue() {\n        this.setState({\n            showBubble: false,\n            dialogueNumber: 0,\n        });\n\n        this.nextDialogueQueue();\n    }\n\n    showDialogue() {\n        this.setState(() => { return {showBubble: true} });\n    }\n\n    clickyTheFace() {\n        this.showDialogue();\n    }\n}","import React, { Component } from 'react';\n// import ImageProcessor from '../../../Processors/ImageProcessor';\n\nimport './OpenDesktopAppWindow.css';\n\nimport IMAGE_PATH from '../../../constants/image_path';\n\nexport default class OpenDesktopAppWindow extends Component {\n    render() {\n        // const image = ImageProcessor.formatImageUrl(this.props.app.headerImage);\n        const headerImage = `${IMAGE_PATH}/${this.props.directory}${this.props.app.headerImage}`;\n        const iconImage = `${IMAGE_PATH}/${this.props.directory}${this.props.app.iconImage}`;\n        // const additionalImage = ImageProcessor.formatImageUrl(this.props.app.additionalImage);\n        const links = this.props.app.links.length\n            ? (\n                <ul>\n                    {\n                        this.props.app.links.map((link, key) => {\n                            return (\n                                <li key={key}><a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a></li>\n                            )\n                        })\n                    }\n                </ul>\n            )\n            : (<div></div>);\n\n        return (\n            <div>\n                <div className=\"desktop-app_behind\" onClick={() => {this.props.closeAppCallback()}}></div>\n\n                <div className=\"desktop-app_open\">\n                    <div className=\"app_open-banner\">\n                        <span className=\"windowTitle\">{ this.props.app.name }</span>\n\n                        <div className=\"desktop-app_close\">\n                            <span onClick={() => {this.props.closeAppCallback()}}>X</span>\n                        </div>\n                    </div>\n\n                    <div className=\"desktop-app--content_wrapper\">\n\n                        <div className=\"app--header-image\">\n                            <img src={headerImage} alt=\"App Logo\"/>\n                        </div>\n\n                        <p>{this.props.app.shortText}</p>\n\n                        <div className=\"app-description_wrapper\">\n                            {\n                                this.props.app.description.map((paragraph, key) => {\n                                    return (\n                                        <p key={key}>\n                                            <img className=\"app-description--icon\" src={iconImage} alt=\"bullet points for description\"></img>\n                                            { paragraph }\n                                        </p>\n                                    );\n                                })\n                            }\n                        </div>\n\n                        { links }\n                    </div>\n                </div>\n            </div>\n        );\n   }\n}","import React, { Component } from 'react';\n\nimport DesktopAppGroup from './DesktopAppGroup/DesktopAppGroup';\nimport DesktopStatusBar from './DesktopStatusBar/DesktopStatusBar';\nimport Mccordinator from '../Mccordinator/Mccordinator';\nimport OpenDesktopAppWindow from './OpenDesktopAppWindow/OpenDesktopAppWindow';\n\nimport './DesktopView.css';\n\nexport default class DesktopView extends Component {\n    render() {\n        const appGroups = (\n            this.props.apps.map((appGroup, key) => {\n                return (\n                    <DesktopAppGroup\n                        key={key}\n                        name={appGroup.name}\n                        list={appGroup.list}\n                        directory={appGroup.directory}\n                        openAppCallback={this.props.openAppCallback}\n                    />\n                );\n            })\n        );\n\n        const selectedApp = this.props.selectedApp.name\n            ? (\n                <OpenDesktopAppWindow\n                    directory={this.props.selectedApp.directory}\n                    app={this.props.selectedApp}\n                    closeAppCallback={this.props.closeAppCallback}\n                />\n            )\n            : (\n                <div></div>\n            );\n\n        return (\n            <div className=\"desktop-container\">\n                <DesktopStatusBar\n                    openAboutCallback={this.props.openAboutCallback}\n                />\n                { appGroups }\n\n                { selectedApp }\n                <Mccordinator />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport MobileView from './MobileView/MobileView';\nimport DesktopView from './DesktopView/DesktopView';\n// import RequestManager from '../Requests/RequestManager';\n\nimport appsList from '../json/apps';\nimport portfolioAbout from '../json/portfolio_about.json';\n// import gamesList from '../json/games';\n\nimport headIcon from '../res/mccordinator2_head.png';\n\nimport './Desktop.css';\n\nconst IPAD_PRO_WIDTH = 1024;\n\n// TODO: IN ABOUT SECTION DO A FAQ??\n\nexport default class Desktop extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      apps: [],\n      selectedApp: {},\n      mode: '',\n    };\n\n    this.setModeByClientWidth = this.setModeByClientWidth.bind(this);\n  }\n\n  render() {\n    const mobileMode = (\n      <MobileView\n        apps={this.state.apps}\n        headIcon={headIcon}\n        selectedApp={this.state.selectedApp}\n        openAppCallback={this.openApp.bind(this)}\n        closeAppCallback={this.closeApp.bind(this)}\n        openAboutCallback={this.openAbout.bind(this)}\n        />\n    );\n\n    const desktopMode = (\n      <DesktopView\n        apps={this.state.apps}\n        name={this.props.name}\n        selectedApp={this.state.selectedApp}\n        closeAppCallback={this.closeApp.bind(this)}\n        openAppCallback={this.openApp.bind(this)}\n        openAboutCallback={this.openAbout.bind(this)}\n      />\n    );\n\n    return this.state.mode === 'desktop' ? desktopMode : mobileMode;\n  }\n\n  init() {\n    this.setState({apps: appsList.data});\n\n    // const appsWithBgColors = this.setAppsBgColors(appsList.data);\n    // this.setState({apps: appsWithBgColors});\n  }\n\n  componentDidMount() {\n    this.init();\n    this.setModeByClientWidth();\n    window.addEventListener('resize', this.setModeByClientWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setModeByClientWidth);\n  }\n\n  setModeByClientWidth() {\n    const mode = window.innerWidth > IPAD_PRO_WIDTH ? 'desktop' : 'mobile';\n\n    this.setState({mode});\n  }\n\n  getAppsInfo() {\n    // return new Promise((resolve) => {\n      // resolve(this.setAppsBgColors(appsList.data))\n    // });\n  }\n\n  setAppsBgColors(data) {\n    return data.map(appGroup => {\n      appGroup.list = appGroup.list.map((item) => {\n        return item.bgColor ? item.bgColor : Object.assign({}, item, {bgColor: this.getRandomColor()})\n      });\n\n      return appGroup;\n    });\n  }\n\n  getRandomColor() {\n    // const colors = ['red', 'green', 'orange', 'blue', 'purple', 'gold'];\n    const colors = ['#133F60', '#63B8F9', '#603E09', '#AD7C33'];\n    const rndColor = Math.floor(Math.random() * colors.length);\n\n    return colors[rndColor];\n  }\n\n  openApp(id, group) {\n    this.setState({selectedApp: this.findAppByIdAndGroup(id, group)});\n  }\n\n  openAbout() {\n    this.setState({selectedApp: portfolioAbout});\n  }\n\n  findAppByIdAndGroup(id, groupName) {\n    const group = this.state.apps.find(group => group.name === groupName);\n    const appToOpen = group.list[id];\n    \n    appToOpen.directory = group.directory;\n\n    return appToOpen;\n  }\n\n  closeApp() {\n    this.setState({selectedApp: {}});\n  }\n}\n","import React, { Component } from 'react';\nimport Desktop from './Desktop/Desktop.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Desktop />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}