{"version":3,"sources":["res/mccordinator2_head.png","Desktop/MobileView/MobileView.js","Desktop/DesktopView/DesktopAppGroup/DesktopApp/DesktopApp.js","constants/image_path.js","Desktop/DesktopView/DesktopAppGroup/DesktopAppGroup.js","Desktop/DesktopView/DesktopStatusBar/DesktopStatusBar.js","Desktop/Mccordinator/Mccordinator.js","Desktop/DesktopView/OpenDesktopAppWindow/OpenDesktopAppWindow.js","Desktop/DesktopView/DesktopView.js","Desktop/Desktop.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MobileView","react_default","a","createElement","className","style","textAlign","width","marginTop","src","this","props","headIcon","alt","Component","DesktopApp","_this","desktopAppStyleObject","onClick","clickHandler","name","backgroundImage","concat","iconImage","backgroundSize","backgroundRepeat","backgroundPosition","activeLink","window","open","openAppCallback","id","group","image_path","process","DesktopAppGroup","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","wrapperClass","toggleExpansionClasses","bind","assertThisInitialized","_this2","list","map","item","key","DesktopApp_DesktopApp_DesktopApp","bgColor","IMAGE_PATH","directory","expandedClass","setState","DesktopStatusBar","openAboutCallback","currentTime","Date","currentDay","getDay","hours","getHours","minutes","getMinutes","suffix","Mccordinator","dialogueNumber","bubbleText","showBubble","clickyTheFace","nextDialogueQueue","closeDialogue","text","continue","exit","next","dialogue","length","showDialogue","OpenDesktopAppWindow","headerImage","app","links","link","href","url","target","rel","closeAppCallback","shortText","description","paragraph","DesktopView","appGroups","apps","appGroup","DesktopAppGroup_DesktopAppGroup_DesktopAppGroup","selectedApp","OpenDesktopAppWindow_OpenDesktopAppWindow_OpenDesktopAppWindow","DesktopStatusBar_DesktopStatusBar_DesktopStatusBar","Mccordinator_Mccordinator_Mccordinator","Desktop","mode","setModeByClientWidth","mobileMode","MobileView_MobileView","openApp","closeApp","desktopMode","DesktopView_DesktopView_DesktopView","openAbout","appsList","data","init","addEventListener","removeEventListener","innerWidth","assign","getRandomColor","colors","Math","floor","random","findAppByIdAndGroup","portfolioAbout","groupName","find","appToOpen","App","Desktop_Desktop_Desktop","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9bc5cfb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mccordinator2_head.907c5d29.png\";","import React, { Component } from 'react';\n// import Banner from './Banner/Banner';\n// import AppGroup from './AppGroup/AppGroup';\n// import OpenAppWindow from '../OpenAppWindow/OpenAppWindow';\n\nexport default class MobileView extends Component {\n    render() {\n        return (\n            <div className=\"mobileContainer\">\n                <h1 style={{textAlign:'center', width: '100%', marginTop: '5rem'}}>Mobile View is coming soon!!</h1>\n\n                {/* <Banner /> */}\n\n                {/* <div className=\"appgroupContainer\">\n                {\n                    this.props.apps.map((appGroup, key) => {\n                    return <AppGroup\n                        key={key}\n                        name={appGroup.name}\n                        list={appGroup.list}\n                        openAppCallback={this.props.openAppCallback}\n                    />;\n                    })\n                }\n                </div> */}\n                \n                <div className=\"osImage\">\n                    <img src={this.props.headIcon} alt=\"Mccordinator's Pixel Head\"/>\n                </div>\n\n                {/* { this.props.selectedApp.name &&\n                    <OpenAppWindow\n                        app={this.props.selectedApp}\n                        closeAppCallback={this.props.closeAppCallback}\n                    />\n                } */}\n            </div>\n      );\n    }\n}\n","import React, { Component } from 'react';\n\nimport './DesktopApp.css';\n\nexport default class DesktopApp extends Component {\n    render() {\n        return (\n            <div className=\"desktopApp\">\n                <div\n                    className=\"desktopAppBackground\"\n                    style={this.desktopAppStyleObject()}\n                    onClick={() => { this.clickHandler() }}\n                >\n                </div>\n\n                <div className=\"desktopAppTitle\">\n                    <h3>{ this.props.name }</h3>\n                </div>\n            </div>\n        )\n    }\n\n    desktopAppStyleObject() {\n        return {\n            // backgroundImage: `url(${this.props.iconImage}), linear-gradient(to bottom right, ${this.props.bgColor} 30%, white 150%)`,\n            backgroundImage: `url(${this.props.iconImage})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n        };\n    }\n\n    clickHandler() {\n        if (this.props.activeLink) {\n            window.open(this.props.activeLink, '_blank');\n\n            return;\n        }\n\n        this.props.openAppCallback(this.props.id, this.props.group);\n    }\n}","export default `${process.env.PUBLIC_URL}/res`;","import React, { Component } from 'react';\nimport DesktopApp from './DesktopApp/DesktopApp';\n\nimport './DesktopAppGroup.css';\n\nimport IMAGE_PATH from '../../../constants/image_path';\n\nexport default class DesktopAppGroup extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n          wrapperClass: '',\n        };\n\n        this.toggleExpansionClasses = this.toggleExpansionClasses.bind(this);\n    }\n\n    render() {\n        return (\n            <div className={`desktopAppGroupWrapper ${this.state.wrapperClass}`}>\n                <div className=\"desktopGroupFolder\" onClick={this.toggleExpansionClasses}>\n                    <div className=\"desktopGroupFolder_back\"></div>\n\n                    <div className=\"desktopGroupFolder_front\">\n                        <h1 className=\"desktopGroupTitle no-select\">{ this.props.name }</h1>\n                    </div>\n                </div>\n\n                <div className=\"desktopAppWrapper\">\n                    {\n                        this.props.list.map((item, key) => {\n                            return <DesktopApp\n                                key={key}\n                                activeLink={item.activeLink}\n                                bgColor={item.bgColor}\n                                iconImage={`${IMAGE_PATH}/${this.props.directory}${item.iconImage}`}\n                                group={this.props.name}\n                                id={key}\n                                name={item.name}\n                                openAppCallback={this.props.openAppCallback}\n                            />;\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    toggleExpansionClasses() {\n        const expandedClass = this.state.wrapperClass === 'expanded' ? '' : 'expanded';\n\n        this.setState({ wrapperClass: expandedClass });\n    }\n}","import React, { Component } from 'react';\n\nimport './DesktopStatusBar.css';\n\nexport default class DesktopStatusBar extends Component {\n    render() {\n        return (\n            <div className=\"desktop_banner-container\">\n                <div className=\"desktop_banner-left\">\n                    <span>Portfolio OS v1.0</span>\n                    <span className=\"banner-left--highlights\" onClick={this.props.openAboutCallback}>\n                        <b>About This Portfolio</b>\n                    </span>\n                </div>\n                \n                <div className=\"desktop_banner-right\">\n                    <span>{ this.currentTime() }</span>\n                </div>\n            </div>\n          );\n    }\n\n    currentTime() {\n    const days = ['Sun', 'Mon', 'Tues', 'Weds', 'Thurs', 'Fri', 'Sat'];\n    const currentTime = new Date(), currentDay = currentTime.getDay();\n    let hours = currentTime.getHours(), minutes = currentTime.getMinutes();\n  \n    if (minutes < 10) {\n       minutes = `0${minutes}`;\n    }\n  \n    let suffix = \"AM\";\n\n    if (hours >= 12) {\n    suffix = \"PM\";\n    hours = hours - 12;\n    }\n\n    if (hours === 0) {\n    hours = 12;\n    }\n  \n    return `${days[currentDay]} ${hours}:${minutes} ${suffix}`;\n    }\n}","import React, { Component } from 'react';\n\nimport './Mccordinator.css';\n\nimport dialogue from '../../json/dialogue.json';\n\nexport default class Mccordinator extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            dialogueNumber: 0,\n            bubbleText: '',\n            showBubble: false,\n        };\n\n        this.clickyTheFace = this.clickyTheFace.bind(this);\n        this.nextDialogueQueue = this.nextDialogueQueue.bind(this);\n        this.closeDialogue = this.closeDialogue.bind(this);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"mccordinatorHead\"></div>\n                {/* <div onClick={this.clickyTheFace} className=\"mccordinatorHead\"></div> */}\n\n                { this.state.showBubble &&\n                    <div className=\"mccordinatorSpeechBubble\">\n                        <p>\n                            { this.state.bubbleText.text }\n                        </p>\n                        <span onClick={this.nextDialogueQueue}> + {this.state.bubbleText.continue}</span>\n                        <span onClick={this.closeDialogue}> + {this.state.bubbleText.exit}</span>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.nextDialogueQueue();\n    }\n\n    nextDialogueQueue() {\n        const next = (this.state.dialogueNumber >= (dialogue.length - 1))\n            ? 0\n            : this.state.dialogueNumber + 1;\n        \n        this.setState({\n                bubbleText: dialogue[this.state.dialogueNumber],\n                dialogueNumber: next,\n        });\n    }\n\n    closeDialogue() {\n        this.setState({\n            showBubble: false,\n            dialogueNumber: 0,\n        });\n\n        this.nextDialogueQueue();\n    }\n\n    showDialogue() {\n        this.setState(() => { return {showBubble: true} });\n    }\n\n    clickyTheFace() {\n        this.showDialogue();\n    }\n}","import React, { Component } from 'react';\n// import ImageProcessor from '../../../Processors/ImageProcessor';\n\nimport './OpenDesktopAppWindow.css';\n\nimport IMAGE_PATH from '../../../constants/image_path';\n\nexport default class OpenDesktopAppWindow extends Component {\n    render() {\n        // const image = ImageProcessor.formatImageUrl(this.props.app.headerImage);\n        const headerImage = `${IMAGE_PATH}/${this.props.directory}${this.props.app.headerImage}`;\n        const iconImage = `${IMAGE_PATH}/${this.props.directory}${this.props.app.iconImage}`;\n        // const additionalImage = ImageProcessor.formatImageUrl(this.props.app.additionalImage);\n        const links = this.props.app.links.length\n            ? (\n                <ul>\n                    {\n                        this.props.app.links.map((link, key) => {\n                            return (\n                                <li key={key}><a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a></li>\n                            )\n                        })\n                    }\n                </ul>\n            )\n            : (<div></div>);\n\n        return (\n            <div>\n                <div className=\"desktop-app_behind\" onClick={() => {this.props.closeAppCallback()}}></div>\n\n                <div className=\"desktop-app_open\">\n                    <div className=\"app_open-banner\">\n                        <span className=\"windowTitle\">{ this.props.app.name }</span>\n\n                        <div className=\"desktop-app_close\">\n                            <span onClick={() => {this.props.closeAppCallback()}}>X</span>\n                        </div>\n                    </div>\n\n                    <div className=\"app--header-image\">\n                        <img src={headerImage} alt=\"App Logo\"/>\n                    </div>\n\n                    {/* <div className=\"app-button_exit\">\n                        <button onClick={() => {this.props.closeAppCallback()}}>X</button>\n                    </div> */}\n\n                    <div className=\"desktop-app--content_wrapper\">\n                        {/* <h1>{this.props.app.name}</h1> */}\n\n                        { this.props.app.shortText &&\n                            <p>{this.props.app.shortText}</p>\n                        }\n\n                        {/* <hr /> */}\n\n                        <div className=\"app-description_wrapper\">\n                            {/* {\n                                this.props.app.language &&\n                                <p>Written in: <span className=\"text--white\">{this.props.app.language}</span></p>\n                            } */}\n                            {\n                                this.props.app.description.map((paragraph, key) => {\n                                    return (\n                                        <p key={key}>\n                                            <img className=\"app-description--icon\" src={iconImage} alt=\"bullet points for description\"></img>\n                                            { paragraph }\n                                        </p>\n                                    );\n                                })\n                            }\n                            {/* {\n                                additionalImage &&\n                                <div className=\"imageFrame additionalImageFrame\">\n                                    <img src={additionalImage} alt=\"App Logo\"/>\n                                </div>\n                            } */}\n                        </div>\n\n                        { links }\n                    </div>\n                </div>\n            </div>\n        );\n   }\n}","import React, { Component } from 'react';\n\nimport DesktopAppGroup from './DesktopAppGroup/DesktopAppGroup';\nimport DesktopStatusBar from './DesktopStatusBar/DesktopStatusBar';\nimport Mccordinator from '../Mccordinator/Mccordinator';\nimport OpenDesktopAppWindow from './OpenDesktopAppWindow/OpenDesktopAppWindow';\n\nimport './DesktopView.css';\n\nexport default class DesktopView extends Component {\n    render() {\n        const appGroups = (\n            this.props.apps.map((appGroup, key) => {\n                return (\n                    <DesktopAppGroup\n                        key={key}\n                        name={appGroup.name}\n                        list={appGroup.list}\n                        directory={appGroup.directory}\n                        openAppCallback={this.props.openAppCallback}\n                    />\n                );\n            })\n        );\n\n        const selectedApp = this.props.selectedApp.name\n            ? (\n                <OpenDesktopAppWindow\n                    directory={this.props.selectedApp.directory}\n                    app={this.props.selectedApp}\n                    closeAppCallback={this.props.closeAppCallback}\n                />\n            )\n            : (\n                <div></div>\n            );\n\n        return (\n            <div className=\"desktop-container\">\n                <DesktopStatusBar\n                    openAboutCallback={this.props.openAboutCallback}\n                />\n                { appGroups }\n\n                { selectedApp }\n                <Mccordinator />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport MobileView from './MobileView/MobileView';\nimport DesktopView from './DesktopView/DesktopView';\n// import RequestManager from '../Requests/RequestManager';\n\nimport appsList from '../json/apps';\nimport portfolioAbout from '../json/portfolio_about.json';\n// import gamesList from '../json/games';\n\nimport headIcon from '../res/mccordinator2_head.png';\n\nimport './Desktop.css';\n\nconst IPAD_PRO_WIDTH = 1024;\n\n// TODO: IN ABOUT SECTION DO A FAQ??\n\nexport default class Desktop extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      apps: [],\n      selectedApp: {},\n      mode: '',\n    };\n\n    this.setModeByClientWidth = this.setModeByClientWidth.bind(this);\n  }\n\n  render() {\n    const mobileMode = (\n      <MobileView\n        apps={this.state.apps}\n        headIcon={headIcon}\n        selectedApp={this.state.selectedApp}\n        openAppCallback={this.openApp.bind(this)}\n        closeAppCallback={this.closeApp.bind(this)}\n        />\n    );\n\n    const desktopMode = (\n      <DesktopView\n        apps={this.state.apps}\n        name={this.props.name}\n        selectedApp={this.state.selectedApp}\n        closeAppCallback={this.closeApp.bind(this)}\n        openAppCallback={this.openApp.bind(this)}\n        openAboutCallback={this.openAbout.bind(this)}\n      />\n    );\n\n    return this.state.mode === 'desktop' ? desktopMode : mobileMode;\n  }\n\n  init() {\n    this.setState({apps: appsList.data});\n\n    // const appsWithBgColors = this.setAppsBgColors(appsList.data);\n    // this.setState({apps: appsWithBgColors});\n  }\n\n  componentDidMount() {\n    this.init();\n    this.setModeByClientWidth();\n    window.addEventListener('resize', this.setModeByClientWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setModeByClientWidth);\n  }\n\n  setModeByClientWidth() {\n    const mode = window.innerWidth > IPAD_PRO_WIDTH ? 'desktop' : 'mobile';\n\n    this.setState({mode});\n  }\n\n  getAppsInfo() {\n    // return new Promise((resolve) => {\n      // resolve(this.setAppsBgColors(appsList.data))\n    // });\n  }\n\n  setAppsBgColors(data) {\n    return data.map(appGroup => {\n      appGroup.list = appGroup.list.map((item) => {\n        return item.bgColor ? item.bgColor : Object.assign({}, item, {bgColor: this.getRandomColor()})\n      });\n\n      return appGroup;\n    });\n  }\n\n  getRandomColor() {\n    // const colors = ['red', 'green', 'orange', 'blue', 'purple', 'gold'];\n    const colors = ['#133F60', '#63B8F9', '#603E09', '#AD7C33'];\n    const rndColor = Math.floor(Math.random() * colors.length);\n\n    return colors[rndColor];\n  }\n\n  openApp(id, group) {\n    this.setState({selectedApp: this.findAppByIdAndGroup(id, group)});\n  }\n\n  openAbout() {\n    this.setState({selectedApp: portfolioAbout});\n  }\n\n  findAppByIdAndGroup(id, groupName) {\n    const group = this.state.apps.find(group => group.name === groupName);\n    const appToOpen = group.list[id];\n    \n    appToOpen.directory = group.directory;\n\n    return appToOpen;\n  }\n\n  closeApp() {\n    this.setState({selectedApp: {}});\n  }\n}\n","import React, { Component } from 'react';\nimport Desktop from './Desktop/Desktop.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Desktop />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}