{"version":3,"sources":["res/mccordinator2_head.png","Desktop/MobileView/Banner/Banner.js","Desktop/MobileView/AppGroup/OsApp/OsAppSmall/OsAppSmall.js","Desktop/MobileView/AppGroup/OsApp/OsAppBig/OsAppBig.js","Desktop/MobileView/AppGroup/OsApp/OsApp.js","Desktop/MobileView/AppGroup/AppGroupSmall/AppGroupSmall.js","Desktop/MobileView/AppGroup/AppGroupBig/AppGroupBig.js","Desktop/MobileView/AppGroup/AppGroup.js","constants/image_path.js","Desktop/OpenAppWindow/OpenAppWindow.js","Desktop/MobileView/MobileView.js","Desktop/DesktopView/DesktopAppGroup/DesktopApp/DesktopApp.js","Desktop/DesktopView/DesktopAppGroup/DesktopAppGroup.js","Desktop/DesktopView/DesktopStatusBar/DesktopStatusBar.js","Desktop/Mccordinator/Mccordinator.js","Desktop/DesktopView/OpenDesktopAppWindow/OpenDesktopAppWindow.js","Desktop/DesktopView/DesktopView.js","Desktop/Desktop.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Banner","react_default","a","createElement","className","this","currentTime","Date","currentDay","getDay","hours","getHours","minutes","getMinutes","concat","suffix","Component","OsAppSmall","style","osAppSmallStyleObject","backgroundImage","props","iconImage","backgroundSize","backgroundRepeat","backgroundPosition","OsAppBig","_this","osAppBigStyleObject","onClick","clickHandler","name","console","log","activeLink","window","open","openAppCallback","id","group","OsApp","image","directory","state","OsAppSmall_OsAppSmall_OsAppSmall","bgColor","OsAppBig_OsAppBig_OsAppBig","AppGroupSmall","clickCallback","list","map","item","key","OsApp_OsApp","AppGroupBig","makeGroupSmall","AppGroup","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","makeGroupBig","bind","assertThisInitialized","AppGroupSmall_AppGroupSmall_AppGroupSmall","AppGroupBig_AppGroupBig_AppGroupBig","openApp","setState","image_path","process","OpenAppWindow","IMAGE_PATH","app","headerImage","links","length","link","href","url","target","rel","text","closeAppCallback","src","alt","shortText","description","paragraph","MobileView","Banner_Banner_Banner","apps","appGroup","AppGroup_AppGroup","headIcon","selectedApp","OpenAppWindow_OpenAppWindow_OpenAppWindow","DesktopApp","desktopAppStyleObject","DesktopAppGroup","wrapperClass","toggleExpansionClasses","_this2","DesktopApp_DesktopApp_DesktopApp","expandedClass","DesktopStatusBar","openAboutCallback","Mccordinator","dialogueNumber","bubbleText","showBubble","clickyTheFace","nextDialogueQueue","closeDialogue","continue","exit","next","dialogue","showDialogue","OpenDesktopAppWindow","DesktopView","appGroups","DesktopAppGroup_DesktopAppGroup_DesktopAppGroup","OpenDesktopAppWindow_OpenDesktopAppWindow_OpenDesktopAppWindow","DesktopStatusBar_DesktopStatusBar_DesktopStatusBar","Mccordinator_Mccordinator_Mccordinator","Desktop","mode","setModeByClientWidth","mobileMode","MobileView_MobileView","closeApp","desktopMode","DesktopView_DesktopView_DesktopView","openAbout","appsList","data","init","addEventListener","removeEventListener","innerWidth","assign","getRandomColor","colors","Math","floor","random","findAppByIdAndGroup","portfolioAbout","groupName","find","appToOpen","App","Desktop_Desktop_Desktop","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4ac7985a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mccordinator2_head.907c5d29.png\";","import React, { Component } from 'react';\nimport './Banner.css';\n\nexport default class Banner extends Component {\n  render() {\n    return (\n        <div className=\"banner-container\">\n          <div className=\"banner-left\">\n            <span>Portfolio OS v1.0</span>\n          </div>\n           \n          <div className=\"banner-right\">\n            <span>{ this.currentTime() }</span>\n          </div>\n        </div>\n      );\n}\n\ncurrentTime() {\nconst days = ['Sun', 'Mon', 'Tues', 'Weds', 'Thurs', 'Fri', 'Sat'];\nconst currentTime = new Date(), currentDay = currentTime.getDay();\nlet hours = currentTime.getHours(), minutes = currentTime.getMinutes();\n\nif (minutes < 10) {\n   minutes = `0${minutes}`;\n}\n\nlet suffix = \"AM\";\n\nif (hours >= 12) {\nsuffix = \"PM\";\nhours = hours - 12;\n}\n\nif (hours === 0) {\nhours = 12;\n}\n\nreturn `${days[currentDay]} ${hours}:${minutes} ${suffix}`;\n}\n}\n","import React, { Component } from 'react';\n\nimport './OsAppSmall.css';\n\nexport default class OsAppSmall extends Component {\n    render() {\n        return (\n            <div className=\"OsAppGroupSmall\">\n                <div\n                    className=\"OsAppGroupSmallBackground\"\n                    style={this.osAppSmallStyleObject()}\n                >\n                    <div className=\"OsAppGroupSmallContainer\">\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    osAppSmallStyleObject() {\n        return {\n            backgroundImage: `url(${this.props.iconImage})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n        };\n    }\n}","import React, { Component } from 'react';\n\nimport './OsAppBig.css';\n\nexport default class OsAppBig extends Component {\n    render() {\n        return (\n            <div className=\"OsAppGroupBig\">\n                <div\n                    className=\"OsAppGroupBigBackground\"\n                    style={this.osAppBigStyleObject()}\n                    onClick={() => { this.clickHandler() }}\n                >\n                    <div className=\"OsAppGroupBigContainer\">\n                    </div>\n                </div>\n\n                <div className=\"OsAppGroupBigTitle\">\n                    <h3>{ this.props.name }</h3>\n                </div>\n            </div>\n        )\n    }\n\n    osAppBigStyleObject() {\n        return {\n            backgroundImage: `url(${this.props.iconImage})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n        };\n    }\n\n    clickHandler() {\n        console.log(this.props);\n        if (this.props.activeLink) {\n            window.open(this.props.activeLink, '_blank');\n\n            return;\n        }\n\n        this.props.openAppCallback(this.props.id, this.props.group)\n    }\n}\n","import React, { Component } from 'react';\nimport OsAppSmall from './OsAppSmall/OsAppSmall';\nimport OsAppBig from './OsAppBig/OsAppBig';\n\nexport default class OsApp extends Component {\n    render() {\n        const image = `${this.props.directory}${this.props.iconImage}`;\n\n        return this.props.state === 'small' ? (\n            <OsAppSmall\n                iconImage={image}\n                bgColor={this.props.bgColor}\n            />\n        ) : (\n            <OsAppBig\n                id={this.props.id}\n                activeLink={this.props.activeLink}\n                name={this.props.name}\n                group={this.props.group}\n                iconImage={image}\n                openAppCallback={this.props.openAppCallback}\n            />\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport OsApp from '../OsApp/OsApp';\nimport './AppGroupSmall.css';\n\nexport default class AppGroupSmall extends Component {\n    render() {\n        return (\n        <div className=\"appGroupSmall\" onClick={this.props.clickCallback}>\n            <div className=\"appGroupSmallBackground\">\n                <div className=\"appGroupSmallContainer\">\n                    {\n                        this.props.list.map((item, key) => {\n                            return <OsApp\n                                key={key}\n                                name={item.name}\n                                bgColor={item.bgColor}\n                                activeLink={item.activeLink}\n                                iconImage={item.iconImage}\n                                directory={this.props.directory}\n                                state={this.props.state}\n                            />;\n                        })\n                    }\n                </div>\n\n                <div className=\"appGroupSmallTitle\">\n                    <h3>{ this.props.name }</h3>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport OsApp from '../OsApp/OsApp';\n\nimport './AppGroupBig.css';\n\nexport default class AppGroupBig extends Component {\n  render() {\n    return (\n      <div className=\"appGroupSmallPlaceholder\">\n            <div\n                className=\"osAppGroupDimBehind\"\n                onClick={() => { this.props.makeGroupSmall() }}\n            ></div>\n\n        <div className=\"appGroupBig\">\n             <div className=\"appGroupBigTitle\">\n                <h1>{ this.props.name }</h1>\n            </div>\n\n            <div className=\"appGroupBigBackground\">\n                <div className=\"appGroupBigContainer\">\n                    {\n                        this.props.list.map((item, key) => {\n                            return <OsApp\n                                key={key}\n                                id={key}\n                                name={item.name}\n                                group={this.props.name}\n                                bgColor={item.bgColor}\n                                activeLink={item.activeLink}\n                                iconImage={item.iconImage}\n                                directory={this.props.directory}\n                                state={this.props.state}\n                                openAppCallback={this.props.openAppCallback}\n                            />;\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AppGroupSmall from './AppGroupSmall/AppGroupSmall';\nimport AppGroupBig from './AppGroupBig/AppGroupBig';\n\nexport default class AppGroup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      state: 'small',\n    };\n\n    this.makeGroupBig = this.makeGroupBig.bind(this);\n    this.makeGroupSmall = this.makeGroupSmall.bind(this);\n  }\n  render() {\n    return this.state.state === 'small' ? (\n      <AppGroupSmall\n        list={this.props.list}\n        name={this.props.name}\n        activeLink={this.props.activeLink}\n        clickCallback={this.makeGroupBig}\n        state={this.state.state}\n        directory={this.props.directory}\n      />\n    ) : (\n      <AppGroupBig\n        list={this.props.list}\n        name={this.props.name}\n        state={this.state.state}\n        directory={this.props.directory}\n        openAppCallback={this.openApp.bind(this)}\n        makeGroupSmall={this.makeGroupSmall}\n      />\n    );\n  }\n\n  makeGroupBig() {\n    this.setState({state: 'big'});\n  }\n\n  makeGroupSmall() {\n    this.setState({state: 'small'});\n  }\n\n  openApp(id, group) {\n    this.makeGroupSmall();\n\n    this.props.openAppCallback(id, group);\n  }\n}\n","export default `${process.env.PUBLIC_URL}/res`;","import React, { Component } from 'react';\n\nimport './OpenAppWindow.css';\n\nimport IMAGE_PATH from '../../constants/image_path';\n\nexport default class OpenAppWindow extends Component {\n    render() {\n        const image = `${IMAGE_PATH}/${this.props.app.directory}/${this.props.app.headerImage}`;\n        const iconImage = `${IMAGE_PATH}/${this.props.app.directory}/${this.props.app.iconImage}`;\n        const links = this.props.app.links.length\n        ? (\n            <ul>\n                {\n                    this.props.app.links.map((link, key) => {\n                        return (\n                            <li key={key}><a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a></li>\n                        )\n                    })\n                }\n            </ul>\n        )\n        : (<div></div>);\n        return (\n            <div className=\"openApp\">\n                {/* <div className=\"closeAppWrapper\">\n                    <span onClick={() => {this.props.closeAppCallback()}}>[X]</span>\n                </div> */}\n\n\n                <div className=\"appImageTitle\">\n                    <span>{this.props.app.name}</span>\n                    \n                    <div className=\"app_close\">\n                        <span onClick={() => {this.props.closeAppCallback()}}>X</span>\n                    </div>\n                </div>\n\n                <div className=\"appImageWrapper\">\n                    <img src={image} alt=\"App Logo\"/>\n                </div>\n\n                <p>{this.props.app.shortText}</p>\n\n                <div className=\"appDescriptionWrapper\">\n                    {\n                        this.props.app.description.map((paragraph, key) => {\n                            return (\n                                <div className=\"app-description--image-wrapper\">\n                                    <img className=\"app-description--icon\" src={iconImage} alt=\"bullet points for description\"></img>\n                                    <p key={key}>{ paragraph }</p>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n\n                { links }\n            </div>\n        );\n   }\n}","import React, { Component } from 'react';\nimport Banner from './Banner/Banner';\nimport AppGroup from './AppGroup/AppGroup';\nimport OpenAppWindow from '../OpenAppWindow/OpenAppWindow';\n\nimport IMAGE_PATH from '../../constants/image_path';\n\nexport default class MobileView extends Component {\n    render() {\n        return (\n            <div className=\"mobileContainer\">\n                {/* <h1 style={{textAlign:'center', width: '100%', marginTop: '10rem', fontSize: '5rem'}}>Mobile View is coming soon!!</h1> */}\n                <Banner />\n\n                <div className=\"appgroupContainer\">\n                {\n                    this.props.apps.map((appGroup, key) => {\n                    return <AppGroup\n                        key={key}\n                        name={appGroup.name}\n                        list={appGroup.list}\n                        directory={`${IMAGE_PATH}/${appGroup.directory}`}\n                        openAppCallback={this.props.openAppCallback}\n                    />;\n                    })\n                }\n                </div>\n\n                <div className=\"osImage\">\n                <img src={this.props.headIcon} alt=\"Mccordinator's Pixel Head\"/>\n                </div>\n\n                {this.props.selectedApp.name &&\n                <OpenAppWindow\n                    app={this.props.selectedApp}\n                    closeAppCallback={this.props.closeAppCallback}\n                />\n                }\n            </div>\n      );\n    }\n}\n","import React, { Component } from 'react';\n\nimport './DesktopApp.css';\n\nexport default class DesktopApp extends Component {\n    render() {\n        return (\n            <div className=\"desktopApp\">\n                <div\n                    className=\"desktopAppBackground\"\n                    style={this.desktopAppStyleObject()}\n                    onClick={() => { this.clickHandler() }}\n                >\n                </div>\n\n                <div className=\"desktopAppTitle\">\n                    <h3>{ this.props.name }</h3>\n                </div>\n            </div>\n        )\n    }\n\n    desktopAppStyleObject() {\n        return {\n            // backgroundImage: `url(${this.props.iconImage}), linear-gradient(to bottom right, ${this.props.bgColor} 30%, white 150%)`,\n            backgroundImage: `url(${this.props.iconImage})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n        };\n    }\n\n    clickHandler() {\n        if (this.props.activeLink) {\n            window.open(this.props.activeLink, '_blank');\n\n            return;\n        }\n\n        this.props.openAppCallback(this.props.id, this.props.group);\n    }\n}","import React, { Component } from 'react';\nimport DesktopApp from './DesktopApp/DesktopApp';\n\nimport './DesktopAppGroup.css';\n\nimport IMAGE_PATH from '../../../constants/image_path';\n\nexport default class DesktopAppGroup extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n          wrapperClass: '',\n        };\n\n        this.toggleExpansionClasses = this.toggleExpansionClasses.bind(this);\n    }\n\n    render() {\n        return (\n            <div className={`desktopAppGroupWrapper ${this.state.wrapperClass}`}>\n                <div className=\"desktopGroupFolder\" onClick={this.toggleExpansionClasses}>\n                    <div className=\"desktopGroupFolder_back\"></div>\n\n                    <div className=\"desktopGroupFolder_front\">\n                        <h1 className=\"desktopGroupTitle no-select\">{ this.props.name }</h1>\n                    </div>\n                </div>\n\n                <div className=\"desktopAppWrapper\">\n                    {\n                        this.props.list.map((item, key) => {\n                            return <DesktopApp\n                                key={key}\n                                activeLink={item.activeLink}\n                                bgColor={item.bgColor}\n                                iconImage={`${IMAGE_PATH}/${this.props.directory}${item.iconImage}`}\n                                group={this.props.name}\n                                id={key}\n                                name={item.name}\n                                openAppCallback={this.props.openAppCallback}\n                            />;\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    toggleExpansionClasses() {\n        const expandedClass = this.state.wrapperClass === 'expanded' ? '' : 'expanded';\n\n        this.setState({ wrapperClass: expandedClass });\n    }\n}","import React, { Component } from 'react';\n\nimport './DesktopStatusBar.css';\n\nexport default class DesktopStatusBar extends Component {\n    render() {\n        return (\n            <div className=\"desktop_banner-container\">\n                <div className=\"desktop_banner-left\">\n                    <span>Portfolio OS v1.0</span>\n                    <span className=\"banner-left--highlights\" onClick={this.props.openAboutCallback}>\n                        <b>About This Portfolio</b>\n                    </span>\n                </div>\n                \n                <div className=\"desktop_banner-right\">\n                    <span>{ this.currentTime() }</span>\n                </div>\n            </div>\n          );\n    }\n\n    currentTime() {\n    const days = ['Sun', 'Mon', 'Tues', 'Weds', 'Thurs', 'Fri', 'Sat'];\n    const currentTime = new Date(), currentDay = currentTime.getDay();\n    let hours = currentTime.getHours(), minutes = currentTime.getMinutes();\n  \n    if (minutes < 10) {\n       minutes = `0${minutes}`;\n    }\n  \n    let suffix = \"AM\";\n\n    if (hours >= 12) {\n    suffix = \"PM\";\n    hours = hours - 12;\n    }\n\n    if (hours === 0) {\n    hours = 12;\n    }\n  \n    return `${days[currentDay]} ${hours}:${minutes} ${suffix}`;\n    }\n}","import React, { Component } from 'react';\n\nimport './Mccordinator.css';\n\nimport dialogue from '../../json/dialogue.json';\n\nexport default class Mccordinator extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            dialogueNumber: 0,\n            bubbleText: '',\n            showBubble: false,\n        };\n\n        this.clickyTheFace = this.clickyTheFace.bind(this);\n        this.nextDialogueQueue = this.nextDialogueQueue.bind(this);\n        this.closeDialogue = this.closeDialogue.bind(this);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"mccordinatorHead\"></div>\n                {/* <div onClick={this.clickyTheFace} className=\"mccordinatorHead\"></div> */}\n\n                { this.state.showBubble &&\n                    <div className=\"mccordinatorSpeechBubble\">\n                        <p>\n                            { this.state.bubbleText.text }\n                        </p>\n                        <span onClick={this.nextDialogueQueue}> + {this.state.bubbleText.continue}</span>\n                        <span onClick={this.closeDialogue}> + {this.state.bubbleText.exit}</span>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.nextDialogueQueue();\n    }\n\n    nextDialogueQueue() {\n        const next = (this.state.dialogueNumber >= (dialogue.length - 1))\n            ? 0\n            : this.state.dialogueNumber + 1;\n        \n        this.setState({\n                bubbleText: dialogue[this.state.dialogueNumber],\n                dialogueNumber: next,\n        });\n    }\n\n    closeDialogue() {\n        this.setState({\n            showBubble: false,\n            dialogueNumber: 0,\n        });\n\n        this.nextDialogueQueue();\n    }\n\n    showDialogue() {\n        this.setState(() => { return {showBubble: true} });\n    }\n\n    clickyTheFace() {\n        this.showDialogue();\n    }\n}","import React, { Component } from 'react';\n// import ImageProcessor from '../../../Processors/ImageProcessor';\n\nimport './OpenDesktopAppWindow.css';\n\nimport IMAGE_PATH from '../../../constants/image_path';\n\nexport default class OpenDesktopAppWindow extends Component {\n    render() {\n        // const image = ImageProcessor.formatImageUrl(this.props.app.headerImage);\n        const headerImage = `${IMAGE_PATH}/${this.props.directory}${this.props.app.headerImage}`;\n        const iconImage = `${IMAGE_PATH}/${this.props.directory}${this.props.app.iconImage}`;\n        // const additionalImage = ImageProcessor.formatImageUrl(this.props.app.additionalImage);\n        const links = this.props.app.links.length\n            ? (\n                <ul>\n                    {\n                        this.props.app.links.map((link, key) => {\n                            return (\n                                <li key={key}><a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a></li>\n                            )\n                        })\n                    }\n                </ul>\n            )\n            : (<div></div>);\n\n        return (\n            <div>\n                <div className=\"desktop-app_behind\" onClick={() => {this.props.closeAppCallback()}}></div>\n\n                <div className=\"desktop-app_open\">\n                    <div className=\"app_open-banner\">\n                        <span className=\"windowTitle\">{ this.props.app.name }</span>\n\n                        <div className=\"desktop-app_close\">\n                            <span onClick={() => {this.props.closeAppCallback()}}>X</span>\n                        </div>\n                    </div>\n\n                    <div className=\"desktop-app--content_wrapper\">\n\n                        <div className=\"app--header-image\">\n                            <img src={headerImage} alt=\"App Logo\"/>\n                        </div>\n\n                        <p>{this.props.app.shortText}</p>\n\n                        <div className=\"app-description_wrapper\">\n                            {\n                                this.props.app.description.map((paragraph, key) => {\n                                    return (\n                                        <p key={key}>\n                                            <img className=\"app-description--icon\" src={iconImage} alt=\"bullet points for description\"></img>\n                                            { paragraph }\n                                        </p>\n                                    );\n                                })\n                            }\n                        </div>\n\n                        { links }\n                    </div>\n                </div>\n            </div>\n        );\n   }\n}","import React, { Component } from 'react';\n\nimport DesktopAppGroup from './DesktopAppGroup/DesktopAppGroup';\nimport DesktopStatusBar from './DesktopStatusBar/DesktopStatusBar';\nimport Mccordinator from '../Mccordinator/Mccordinator';\nimport OpenDesktopAppWindow from './OpenDesktopAppWindow/OpenDesktopAppWindow';\n\nimport './DesktopView.css';\n\nexport default class DesktopView extends Component {\n    render() {\n        const appGroups = (\n            this.props.apps.map((appGroup, key) => {\n                return (\n                    <DesktopAppGroup\n                        key={key}\n                        name={appGroup.name}\n                        list={appGroup.list}\n                        directory={appGroup.directory}\n                        openAppCallback={this.props.openAppCallback}\n                    />\n                );\n            })\n        );\n\n        const selectedApp = this.props.selectedApp.name\n            ? (\n                <OpenDesktopAppWindow\n                    directory={this.props.selectedApp.directory}\n                    app={this.props.selectedApp}\n                    closeAppCallback={this.props.closeAppCallback}\n                />\n            )\n            : (\n                <div></div>\n            );\n\n        return (\n            <div className=\"desktop-container\">\n                <DesktopStatusBar\n                    openAboutCallback={this.props.openAboutCallback}\n                />\n                { appGroups }\n\n                { selectedApp }\n                <Mccordinator />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport MobileView from './MobileView/MobileView';\nimport DesktopView from './DesktopView/DesktopView';\n// import RequestManager from '../Requests/RequestManager';\n\nimport appsList from '../json/apps';\nimport portfolioAbout from '../json/portfolio_about.json';\n// import gamesList from '../json/games';\n\nimport headIcon from '../res/mccordinator2_head.png';\n\nimport './Desktop.css';\n\nconst IPAD_PRO_WIDTH = 1024;\n\n// TODO: IN ABOUT SECTION DO A FAQ??\n\nexport default class Desktop extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      apps: [],\n      selectedApp: {},\n      mode: '',\n    };\n\n    this.setModeByClientWidth = this.setModeByClientWidth.bind(this);\n  }\n\n  render() {\n    const mobileMode = (\n      <MobileView\n        apps={this.state.apps}\n        headIcon={headIcon}\n        selectedApp={this.state.selectedApp}\n        openAppCallback={this.openApp.bind(this)}\n        closeAppCallback={this.closeApp.bind(this)}\n        />\n    );\n\n    const desktopMode = (\n      <DesktopView\n        apps={this.state.apps}\n        name={this.props.name}\n        selectedApp={this.state.selectedApp}\n        closeAppCallback={this.closeApp.bind(this)}\n        openAppCallback={this.openApp.bind(this)}\n        openAboutCallback={this.openAbout.bind(this)}\n      />\n    );\n\n    return this.state.mode === 'desktop' ? desktopMode : mobileMode;\n  }\n\n  init() {\n    this.setState({apps: appsList.data});\n\n    // const appsWithBgColors = this.setAppsBgColors(appsList.data);\n    // this.setState({apps: appsWithBgColors});\n  }\n\n  componentDidMount() {\n    this.init();\n    this.setModeByClientWidth();\n    window.addEventListener('resize', this.setModeByClientWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setModeByClientWidth);\n  }\n\n  setModeByClientWidth() {\n    const mode = window.innerWidth > IPAD_PRO_WIDTH ? 'desktop' : 'mobile';\n\n    this.setState({mode});\n  }\n\n  getAppsInfo() {\n    // return new Promise((resolve) => {\n      // resolve(this.setAppsBgColors(appsList.data))\n    // });\n  }\n\n  setAppsBgColors(data) {\n    return data.map(appGroup => {\n      appGroup.list = appGroup.list.map((item) => {\n        return item.bgColor ? item.bgColor : Object.assign({}, item, {bgColor: this.getRandomColor()})\n      });\n\n      return appGroup;\n    });\n  }\n\n  getRandomColor() {\n    // const colors = ['red', 'green', 'orange', 'blue', 'purple', 'gold'];\n    const colors = ['#133F60', '#63B8F9', '#603E09', '#AD7C33'];\n    const rndColor = Math.floor(Math.random() * colors.length);\n\n    return colors[rndColor];\n  }\n\n  openApp(id, group) {\n    this.setState({selectedApp: this.findAppByIdAndGroup(id, group)});\n  }\n\n  openAbout() {\n    this.setState({selectedApp: portfolioAbout});\n  }\n\n  findAppByIdAndGroup(id, groupName) {\n    const group = this.state.apps.find(group => group.name === groupName);\n    const appToOpen = group.list[id];\n    \n    appToOpen.directory = group.directory;\n\n    return appToOpen;\n  }\n\n  closeApp() {\n    this.setState({selectedApp: {}});\n  }\n}\n","import React, { Component } from 'react';\nimport Desktop from './Desktop/Desktop.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Desktop />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}