{"version":3,"sources":["res/mccordinator2_head.png","Desktop/MobileView/Banner/Banner.js","Desktop/MobileView/AppGroup/OsApp/OsAppSmall/OsAppSmall.js","Desktop/MobileView/AppGroup/OsApp/OsAppBig/OsAppBig.js","Desktop/MobileView/AppGroup/OsApp/OsApp.js","Desktop/MobileView/AppGroup/AppGroupSmall/AppGroupSmall.js","Desktop/MobileView/AppGroup/AppGroupBig/AppGroupBig.js","Desktop/MobileView/AppGroup/AppGroup.js","constants/image_path.js","Desktop/OpenAppWindow/OpenAppWindow.js","Desktop/MobileView/MobileView.js","Desktop/DesktopView/DesktopAppGroup/DesktopApp/DesktopApp.js","Desktop/DesktopView/DesktopAppGroup/DesktopAppGroup.js","Desktop/DesktopView/DesktopStatusBar/DesktopStatusBar.js","Desktop/Mccordinator/Mccordinator.js","Desktop/DesktopView/OpenDesktopAppWindow/OpenDesktopAppWindow.js","Desktop/DesktopView/DesktopView.js","Desktop/Desktop.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Banner","className","onClick","this","props","openAboutCallback","currentTime","Date","currentDay","getDay","hours","getHours","minutes","getMinutes","suffix","Component","OsAppSmall","style","osAppSmallStyleObject","backgroundImage","iconImage","backgroundSize","backgroundRepeat","backgroundPosition","OsAppBig","osAppBigStyleObject","clickHandler","name","console","log","activeLink","window","open","openAppCallback","id","group","OsApp","image","directory","state","bgColor","AppGroupSmall","clickCallback","list","map","item","key","AppGroupBig","makeGroupSmall","AppGroup","makeGroupBig","bind","openApp","setState","process","OpenAppWindow","IMAGE_PATH","app","headerImage","links","length","link","href","url","target","rel","text","closeAppCallback","src","alt","shortText","description","paragraph","MobileView","apps","appGroup","headIcon","selectedApp","DesktopApp","desktopAppStyleObject","DesktopAppGroup","wrapperClass","toggleExpansionClasses","expandedClass","DesktopStatusBar","mounted","timeInterval","time","version","getCurrentTime","setInterval","clearInterval","seconds","getSeconds","Mccordinator","dialogueNumber","bubbleText","showBubble","clickyTheFace","nextDialogueQueue","closeDialogue","continue","exit","next","dialogue","showDialogue","OpenDesktopAppWindow","DesktopView","appGroups","Desktop","mode","setModeByClientWidth","mobileMode","closeApp","openAbout","desktopMode","appsList","data","init","addEventListener","removeEventListener","innerWidth","Object","assign","getRandomColor","colors","Math","floor","random","findAppByIdAndGroup","portfolioAbout","groupName","find","appToOpen","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ca6afa9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mccordinator2_head.907c5d29.png\";","import React, { Component } from \"react\";\nimport \"./Banner.css\";\n// import IMAGE_PATH from \"../../../constants/image_path\";\n\nexport default class Banner extends Component {\n  render() {\n    return (\n      <div className=\"banner-container\">\n        <div className=\"banner-left\">\n          <span onClick={this.props.openAboutCallback}>About</span>\n          {/* <span>\n            <a\n              href={`${IMAGE_PATH}/resume.pdf`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Resume\n            </a>\n          </span> */}\n        </div>\n\n        <div className=\"banner-right\">\n          <span>{this.currentTime()}</span>\n        </div>\n      </div>\n    );\n  }\n\n  currentTime() {\n    const days = [\"Sun\", \"Mon\", \"Tues\", \"Weds\", \"Thurs\", \"Fri\", \"Sat\"];\n\n    const currentTime = new Date(),\n      currentDay = currentTime.getDay();\n\n    let hours = currentTime.getHours(),\n      minutes = currentTime.getMinutes();\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    let suffix = \"AM\";\n\n    if (hours >= 12) {\n      suffix = \"PM\";\n      hours = hours - 12;\n    }\n\n    if (hours === 0) {\n      hours = 12;\n    }\n\n    return `${days[currentDay]} ${hours}:${minutes} ${suffix}`;\n  }\n}\n","import React, { Component } from 'react';\n\nimport './OsAppSmall.css';\n\nexport default class OsAppSmall extends Component {\n    render() {\n        return (\n            <div className=\"OsAppGroupSmall\">\n                <div\n                    className=\"OsAppGroupSmallBackground\"\n                    style={this.osAppSmallStyleObject()}\n                >\n                    <div className=\"OsAppGroupSmallContainer\">\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    osAppSmallStyleObject() {\n        return {\n            backgroundImage: `url(${this.props.iconImage})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n        };\n    }\n}","import React, { Component } from 'react';\n\nimport './OsAppBig.css';\n\nexport default class OsAppBig extends Component {\n    render() {\n        return (\n            <div className=\"OsAppGroupBig\">\n                <div\n                    className=\"OsAppGroupBigBackground\"\n                    style={this.osAppBigStyleObject()}\n                    onClick={() => { this.clickHandler() }}\n                >\n                    <div className=\"OsAppGroupBigContainer\">\n                    </div>\n                </div>\n\n                <div className=\"OsAppGroupBigTitle\">\n                    <h3>{ this.props.name }</h3>\n                </div>\n            </div>\n        )\n    }\n\n    osAppBigStyleObject() {\n        return {\n            backgroundImage: `url(${this.props.iconImage})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n        };\n    }\n\n    clickHandler() {\n        console.log(this.props);\n        if (this.props.activeLink) {\n            window.open(this.props.activeLink, '_blank');\n\n            return;\n        }\n\n        this.props.openAppCallback(this.props.id, this.props.group)\n    }\n}\n","import React, { Component } from 'react';\nimport OsAppSmall from './OsAppSmall/OsAppSmall';\nimport OsAppBig from './OsAppBig/OsAppBig';\n\nexport default class OsApp extends Component {\n    render() {\n        const image = `${this.props.directory}${this.props.iconImage}`;\n\n        return this.props.state === 'small' ? (\n            <OsAppSmall\n                iconImage={image}\n                bgColor={this.props.bgColor}\n            />\n        ) : (\n            <OsAppBig\n                id={this.props.id}\n                activeLink={this.props.activeLink}\n                name={this.props.name}\n                group={this.props.group}\n                iconImage={image}\n                openAppCallback={this.props.openAppCallback}\n            />\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport OsApp from '../OsApp/OsApp';\nimport './AppGroupSmall.css';\n\nexport default class AppGroupSmall extends Component {\n    render() {\n        return (\n        <div className=\"appGroupSmall\" onClick={this.props.clickCallback}>\n            <div className=\"appGroupSmallBackground\">\n                <div className=\"appGroupSmallContainer\">\n                    {\n                        this.props.list.map((item, key) => {\n                            return <OsApp\n                                key={key}\n                                name={item.name}\n                                bgColor={item.bgColor}\n                                activeLink={item.activeLink}\n                                iconImage={item.iconImage}\n                                directory={this.props.directory}\n                                state={this.props.state}\n                            />;\n                        })\n                    }\n                </div>\n\n                <div className=\"appGroupSmallTitle\">\n                    <h3>{ this.props.name }</h3>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport OsApp from '../OsApp/OsApp';\n\nimport './AppGroupBig.css';\n\nexport default class AppGroupBig extends Component {\n  render() {\n    return (\n      <div className=\"appGroupSmallPlaceholder\">\n            <div\n                className=\"osAppGroupDimBehind\"\n                onClick={() => { this.props.makeGroupSmall() }}\n            ></div>\n\n        <div className=\"appGroupBig\">\n             <div className=\"appGroupBigTitle\">\n                <h1>{ this.props.name }</h1>\n            </div>\n\n            <div className=\"appGroupBigBackground\">\n                <div className=\"appGroupBigContainer\">\n                    {\n                        this.props.list.map((item, key) => {\n                            return <OsApp\n                                key={key}\n                                id={key}\n                                name={item.name}\n                                group={this.props.name}\n                                bgColor={item.bgColor}\n                                activeLink={item.activeLink}\n                                iconImage={item.iconImage}\n                                directory={this.props.directory}\n                                state={this.props.state}\n                                openAppCallback={this.props.openAppCallback}\n                            />;\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AppGroupSmall from './AppGroupSmall/AppGroupSmall';\nimport AppGroupBig from './AppGroupBig/AppGroupBig';\n\nexport default class AppGroup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      state: 'small',\n    };\n\n    this.makeGroupBig = this.makeGroupBig.bind(this);\n    this.makeGroupSmall = this.makeGroupSmall.bind(this);\n  }\n  render() {\n    return this.state.state === 'small' ? (\n      <AppGroupSmall\n        list={this.props.list}\n        name={this.props.name}\n        activeLink={this.props.activeLink}\n        clickCallback={this.makeGroupBig}\n        state={this.state.state}\n        directory={this.props.directory}\n      />\n    ) : (\n      <AppGroupBig\n        list={this.props.list}\n        name={this.props.name}\n        state={this.state.state}\n        directory={this.props.directory}\n        openAppCallback={this.openApp.bind(this)}\n        makeGroupSmall={this.makeGroupSmall}\n      />\n    );\n  }\n\n  makeGroupBig() {\n    this.setState({state: 'big'});\n  }\n\n  makeGroupSmall() {\n    this.setState({state: 'small'});\n  }\n\n  openApp(id, group) {\n    this.makeGroupSmall();\n\n    this.props.openAppCallback(id, group);\n  }\n}\n","export default `${process.env.PUBLIC_URL}/res`;","import React, { Component } from 'react';\n\nimport './OpenAppWindow.css';\n\nimport IMAGE_PATH from '../../constants/image_path';\n\nexport default class OpenAppWindow extends Component {\n    render() {\n        const image = `${IMAGE_PATH}/${this.props.app.directory}/${this.props.app.headerImage}`;\n        const iconImage = `${IMAGE_PATH}/${this.props.app.directory}/${this.props.app.iconImage}`;\n        const links = this.props.app.links.length\n        ? (\n            <ul>\n                {\n                    this.props.app.links.map((link, key) => {\n                        return (\n                            <li key={key}><a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a></li>\n                        )\n                    })\n                }\n            </ul>\n        )\n        : (<div></div>);\n        return (\n            <div className=\"openApp\">\n                {/* <div className=\"closeAppWrapper\">\n                    <span onClick={() => {this.props.closeAppCallback()}}>[X]</span>\n                </div> */}\n\n\n                <div className=\"appImageTitle\">\n                    <span>{this.props.app.name}</span>\n                    \n                    <div className=\"app_close\">\n                        <span onClick={() => {this.props.closeAppCallback()}}>X</span>\n                    </div>\n                </div>\n\n                <div className=\"appImageWrapper\">\n                    <img src={image} alt=\"App Logo\"/>\n                </div>\n\n                <p>{this.props.app.shortText}</p>\n\n                <div className=\"appDescriptionWrapper\">\n                    {\n                        this.props.app.description.map((paragraph, key) => {\n                            return (\n                                <div key={key} className=\"app-description--image-wrapper\">\n                                    <img className=\"app-description--icon\" src={iconImage} alt=\"bullet points for description\"></img>\n                                    <p>{ paragraph }</p>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n\n                { links }\n            </div>\n        );\n   }\n}","import React, { Component } from 'react';\nimport Banner from './Banner/Banner';\nimport AppGroup from './AppGroup/AppGroup';\nimport OpenAppWindow from '../OpenAppWindow/OpenAppWindow';\n\nimport IMAGE_PATH from '../../constants/image_path';\n\nexport default class MobileView extends Component {\n    render() {\n        return (\n            <div className=\"mobileContainer\">\n                {/* <h1 style={{textAlign:'center', width: '100%', marginTop: '10rem', fontSize: '5rem'}}>Mobile View is coming soon!!</h1> */}\n                <Banner \n                    openAboutCallback={this.props.openAboutCallback}\n                />\n\n                <div className=\"appgroupContainer\">\n                {\n                    this.props.apps.map((appGroup, key) => {\n                    return <AppGroup\n                        key={key}\n                        name={appGroup.name}\n                        list={appGroup.list}\n                        directory={`${IMAGE_PATH}/${appGroup.directory}`}\n                        openAppCallback={this.props.openAppCallback}\n                    />;\n                    })\n                }\n                </div>\n\n                <div className=\"osImage\">\n                <img src={this.props.headIcon} alt=\"Mccordinator's Pixel Head\"/>\n                </div>\n\n                {this.props.selectedApp.name &&\n                <OpenAppWindow\n                    app={this.props.selectedApp}\n                    closeAppCallback={this.props.closeAppCallback}\n                />\n                }\n            </div>\n      );\n    }\n}\n","import React, { Component } from 'react';\n\nimport './DesktopApp.css';\n\nexport default class DesktopApp extends Component {\n    render() {\n        return (\n            <div className=\"desktopApp\">\n                <div\n                    className=\"desktopAppBackground\"\n                    style={this.desktopAppStyleObject()}\n                    onClick={() => { this.clickHandler() }}\n                >\n                </div>\n\n                <div className=\"desktopAppTitle\">\n                    <h3>{ this.props.name }</h3>\n                </div>\n            </div>\n        )\n    }\n\n    desktopAppStyleObject() {\n        return {\n            // backgroundImage: `url(${this.props.iconImage}), linear-gradient(to bottom right, ${this.props.bgColor} 30%, white 150%)`,\n            backgroundImage: `url(${this.props.iconImage})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n        };\n    }\n\n    clickHandler() {\n        if (this.props.activeLink) {\n            window.open(this.props.activeLink, '_blank');\n\n            return;\n        }\n\n        this.props.openAppCallback(this.props.id, this.props.group);\n    }\n}","import React, { Component } from 'react';\nimport DesktopApp from './DesktopApp/DesktopApp';\n\nimport './DesktopAppGroup.css';\n\nimport IMAGE_PATH from '../../../constants/image_path';\n\nexport default class DesktopAppGroup extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n          wrapperClass: '',\n        };\n\n        this.toggleExpansionClasses = this.toggleExpansionClasses.bind(this);\n    }\n\n    render() {\n        return (\n            <div className={`desktopAppGroupWrapper ${this.state.wrapperClass}`}>\n                <div className=\"desktopGroupFolder\" onClick={this.toggleExpansionClasses}>\n                    <div className=\"desktopGroupFolder_back\"></div>\n\n                    <div className=\"desktopGroupFolder_front\">\n                        <h1 className=\"desktopGroupTitle no-select\">{ this.props.name }</h1>\n                    </div>\n                </div>\n\n                <div className=\"desktopAppWrapper\">\n                    {\n                        this.props.list.map((item, key) => {\n                            return <DesktopApp\n                                key={key}\n                                activeLink={item.activeLink}\n                                bgColor={item.bgColor}\n                                iconImage={`${IMAGE_PATH}/${this.props.directory}${item.iconImage}`}\n                                group={this.props.name}\n                                id={key}\n                                name={item.name}\n                                openAppCallback={this.props.openAppCallback}\n                            />;\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    toggleExpansionClasses() {\n        const expandedClass = this.state.wrapperClass === 'expanded' ? '' : 'expanded';\n\n        this.setState({ wrapperClass: expandedClass });\n    }\n}","import React, { Component } from 'react';\n\nimport './DesktopStatusBar.css';\n\nimport { version } from '../../../json/version';\n\nexport default class DesktopStatusBar extends Component {\n    mounted = true;\n    timeInterval = null;\n\n    constructor() {\n        super();\n\n        this.state = {\n            time: '',\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"desktop_banner-container\">\n                <div className=\"desktop_banner-left\">\n                    <span>Portfolio OS v{ version }</span>\n                    <span className=\"banner-left--highlights\" onClick={this.props.openAboutCallback}>\n                        About This Portfolio\n                    </span>\n                </div>\n\n                <div className=\"desktop_banner-right\">\n                    <span>{ this.state.time }</span>\n                </div>\n            </div>\n          );\n    }\n\n    componentDidMount() {\n        this.setState({time: this.getCurrentTime()})\n\n        this.timeInterval = setInterval(() => {\n            if (this.mounted) {\n                this.setState({time: this.getCurrentTime()});\n\n                return;\n            }\n\n            clearInterval(this.timeInterval);\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    getCurrentTime() {\n    const days = ['Sun', 'Mon', 'Tues', 'Weds', 'Thurs', 'Fri', 'Sat'];\n    const currentTime = new Date(), currentDay = currentTime.getDay();\n    let hours = currentTime.getHours(), minutes = currentTime.getMinutes(), seconds = currentTime.getSeconds();\n\n    if (minutes < 10) {\n       minutes = `0${minutes}`;\n    }\n\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n\n    let suffix = \"AM\";\n\n    if (hours >= 12) {\n    suffix = \"PM\";\n    hours = hours - 12;\n    }\n\n    if (hours === 0) {\n    hours = 12;\n    }\n\n    return `${days[currentDay]} ${hours}:${minutes}:${seconds} ${suffix}`;\n    }\n}","import React, { Component } from 'react';\n\nimport './Mccordinator.css';\n\nimport dialogue from '../../json/dialogue.json';\n\nexport default class Mccordinator extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            dialogueNumber: 0,\n            bubbleText: '',\n            showBubble: false,\n        };\n\n        this.clickyTheFace = this.clickyTheFace.bind(this);\n        this.nextDialogueQueue = this.nextDialogueQueue.bind(this);\n        this.closeDialogue = this.closeDialogue.bind(this);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<div className=\"mccordinatorHead\"></div> */}\n                <div onClick={this.clickyTheFace} className=\"mccordinatorHead\"></div>\n\n                { this.state.showBubble &&\n                    <div className=\"mccordinatorSpeechBubble\">\n                        <p>\n                            { this.state.bubbleText.text }\n                        </p>\n                        <span onClick={this.nextDialogueQueue}> + {this.state.bubbleText.continue}</span>\n                        <span onClick={this.closeDialogue}> + {this.state.bubbleText.exit}</span>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.nextDialogueQueue();\n    }\n\n    nextDialogueQueue() {\n        const next = (this.state.dialogueNumber >= (dialogue.length - 1))\n            ? 0\n            : this.state.dialogueNumber + 1;\n\n        this.setState({\n                bubbleText: dialogue[this.state.dialogueNumber],\n                dialogueNumber: next,\n        });\n    }\n\n    closeDialogue() {\n        this.setState({\n            showBubble: false,\n            dialogueNumber: 0,\n        });\n\n        this.nextDialogueQueue();\n    }\n\n    showDialogue() {\n        this.setState(() => { return {showBubble: true} });\n    }\n\n    clickyTheFace() {\n        this.showDialogue();\n    }\n}","import React, { Component } from 'react';\n// import ImageProcessor from '../../../Processors/ImageProcessor';\n\nimport './OpenDesktopAppWindow.css';\n\nimport IMAGE_PATH from '../../../constants/image_path';\n\nexport default class OpenDesktopAppWindow extends Component {\n    render() {\n        // const image = ImageProcessor.formatImageUrl(this.props.app.headerImage);\n        const headerImage = `${IMAGE_PATH}/${this.props.directory}${this.props.app.headerImage}`;\n        const iconImage = `${IMAGE_PATH}/${this.props.directory}${this.props.app.iconImage}`;\n        // const additionalImage = ImageProcessor.formatImageUrl(this.props.app.additionalImage);\n        const links = this.props.app.links.length\n            ? (\n                <ul>\n                    {\n                        this.props.app.links.map((link, key) => {\n                            return (\n                                <li key={key}><a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a></li>\n                            )\n                        })\n                    }\n                </ul>\n            )\n            : (<div></div>);\n\n        return (\n            <div>\n                <div className=\"desktop-app_behind\" onClick={() => {this.props.closeAppCallback()}}></div>\n\n                <div className=\"desktop-app_open\">\n                    <div className=\"app_open-banner\">\n                        <span className=\"windowTitle\">{ this.props.app.name }</span>\n\n                        <div className=\"desktop-app_close\">\n                            <span onClick={() => {this.props.closeAppCallback()}}>X</span>\n                        </div>\n                    </div>\n\n                    <div className=\"desktop-app--content_wrapper\">\n\n                        <div className=\"app--header-image\">\n                            <img src={headerImage} alt=\"App Logo\"/>\n                        </div>\n\n                        <p>{this.props.app.shortText}</p>\n\n                        <div className=\"app-description_wrapper\">\n                            {\n                                this.props.app.description.map((paragraph, key) => {\n                                    return (\n                                        <p key={key}>\n                                            <img className=\"app-description--icon\" src={iconImage} alt=\"bullet points for description\"></img>\n                                            { paragraph }\n                                        </p>\n                                    );\n                                })\n                            }\n                        </div>\n\n                        { links }\n                    </div>\n                </div>\n            </div>\n        );\n   }\n}","import React, { Component } from 'react';\n\nimport DesktopAppGroup from './DesktopAppGroup/DesktopAppGroup';\nimport DesktopStatusBar from './DesktopStatusBar/DesktopStatusBar';\nimport Mccordinator from '../Mccordinator/Mccordinator';\nimport OpenDesktopAppWindow from './OpenDesktopAppWindow/OpenDesktopAppWindow';\n\nimport './DesktopView.css';\n\nexport default class DesktopView extends Component {\n    render() {\n        const appGroups = (\n            this.props.apps.map((appGroup, key) => {\n                return (\n                    <DesktopAppGroup\n                        key={key}\n                        name={appGroup.name}\n                        list={appGroup.list}\n                        directory={appGroup.directory}\n                        openAppCallback={this.props.openAppCallback}\n                    />\n                );\n            })\n        );\n\n        const selectedApp = this.props.selectedApp.name\n            ? (\n                <OpenDesktopAppWindow\n                    directory={this.props.selectedApp.directory}\n                    app={this.props.selectedApp}\n                    closeAppCallback={this.props.closeAppCallback}\n                />\n            )\n            : (\n                <div></div>\n            );\n\n        return (\n            <div className=\"desktop-container\">\n                <DesktopStatusBar\n                    openAboutCallback={this.props.openAboutCallback}\n                />\n                { appGroups }\n\n                { selectedApp }\n                <Mccordinator />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport MobileView from './MobileView/MobileView';\nimport DesktopView from './DesktopView/DesktopView';\n// import RequestManager from '../Requests/RequestManager';\n\nimport appsList from '../json/apps';\nimport portfolioAbout from '../json/portfolio_about.json';\n// import gamesList from '../json/games';\n\nimport headIcon from '../res/mccordinator2_head.png';\n\nimport './Desktop.css';\n\nconst IPAD_PRO_WIDTH = 1024;\n\n// TODO: IN ABOUT SECTION DO A FAQ??\n\nexport default class Desktop extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      apps: [],\n      selectedApp: {},\n      mode: '',\n    };\n\n    this.setModeByClientWidth = this.setModeByClientWidth.bind(this);\n  }\n\n  render() {\n    const mobileMode = (\n      <MobileView\n        apps={this.state.apps}\n        headIcon={headIcon}\n        selectedApp={this.state.selectedApp}\n        openAppCallback={this.openApp.bind(this)}\n        closeAppCallback={this.closeApp.bind(this)}\n        openAboutCallback={this.openAbout.bind(this)}\n        />\n    );\n\n    const desktopMode = (\n      <DesktopView\n        apps={this.state.apps}\n        name={this.props.name}\n        selectedApp={this.state.selectedApp}\n        closeAppCallback={this.closeApp.bind(this)}\n        openAppCallback={this.openApp.bind(this)}\n        openAboutCallback={this.openAbout.bind(this)}\n      />\n    );\n\n    return this.state.mode === 'desktop' ? desktopMode : mobileMode;\n  }\n\n  init() {\n    this.setState({apps: appsList.data});\n\n    // const appsWithBgColors = this.setAppsBgColors(appsList.data);\n    // this.setState({apps: appsWithBgColors});\n  }\n\n  componentDidMount() {\n    this.init();\n    this.setModeByClientWidth();\n    window.addEventListener('resize', this.setModeByClientWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setModeByClientWidth);\n  }\n\n  setModeByClientWidth() {\n    const mode = window.innerWidth > IPAD_PRO_WIDTH ? 'desktop' : 'mobile';\n\n    this.setState({mode});\n  }\n\n  getAppsInfo() {\n    // return new Promise((resolve) => {\n      // resolve(this.setAppsBgColors(appsList.data))\n    // });\n  }\n\n  setAppsBgColors(data) {\n    return data.map(appGroup => {\n      appGroup.list = appGroup.list.map((item) => {\n        return item.bgColor ? item.bgColor : Object.assign({}, item, {bgColor: this.getRandomColor()})\n      });\n\n      return appGroup;\n    });\n  }\n\n  getRandomColor() {\n    // const colors = ['red', 'green', 'orange', 'blue', 'purple', 'gold'];\n    const colors = ['#133F60', '#63B8F9', '#603E09', '#AD7C33'];\n    const rndColor = Math.floor(Math.random() * colors.length);\n\n    return colors[rndColor];\n  }\n\n  openApp(id, group) {\n    this.setState({selectedApp: this.findAppByIdAndGroup(id, group)});\n  }\n\n  openAbout() {\n    this.setState({selectedApp: portfolioAbout});\n  }\n\n  findAppByIdAndGroup(id, groupName) {\n    const group = this.state.apps.find(group => group.name === groupName);\n    const appToOpen = group.list[id];\n    \n    appToOpen.directory = group.directory;\n\n    return appToOpen;\n  }\n\n  closeApp() {\n    this.setState({selectedApp: {}});\n  }\n}\n","import React, { Component } from 'react';\nimport Desktop from './Desktop/Desktop.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Desktop />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}